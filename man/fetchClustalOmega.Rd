% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchClustalOmega.R
\name{fetchClustalOmega}
\alias{fetchClustalOmega}
\title{fetchClustalOmega}
\usage{
fetchClustalOmega(inputSeqs, readType = c("AA", "DNA", "RNA"),
  cluster = "default", gapOpening = "default", gapExtension = "default",
  maxiters = "default", substitutionMatrix = "default", type = "default",
  order = c("aligned", "input"), verbose = FALSE, help = FALSE, ...)
}
\arguments{
\item{inputSeqs}{The sequences the user would like to align. Can either
be an alignment ID of a BaliBASE alignment or a file path to a .mfa file
containing sequences for an alignment.}

\item{readType}{The type of characters found in the provided input
sequences. Can either be "AA", "DNA" or "RNA" depending on the characters
in the file.}

\item{cluster}{The cluster size which should be used. The default is 100.
In the original ClustalOmega implementation, this parameter is called
cluster-size.}

\item{gapOpening, gapExtension}{ClustalOmega currently does not allow
to adjust gap penalties; these arguments are only for future extensions
and consistency with the other algorithms and msa. However, setting these
parameters to values other than "default" will result in a warning.}

\item{maxiters}{maximum number of iterations; the default value
is 0 (no limitation). In the original ClustalOmega implementation,
this parameter is called \code{iterations}.}

\item{substitutionMatrix}{substitution matrix for scoring matches and
mismatches; can be a real matrix or a file name. If the file interface
is used, matrices have to be in NCBI-format. The original MUSCLE
implementation also accepts matrices in WU_BLAST (AB_BLAST) format, but,
due to copyright restrictions, this format is not supported by
\code{msaMuscle}.}

\item{type}{type of the input sequences \code{inputSeqs}; see \code{msa()}
from \code{msa} package.}

\item{order}{how the sequences should be ordered in the output object (see msa);
in the original ClustalW implementation, this parameter is called
\code{output-order}.}

\item{verbose}{if TRUE, the algorithm displays detailed information
and progress messages.}

\item{help}{if TRUE, information about algorithm-specific parameters is
displayed. In this case, no multiple sequence alignment is performed and
the function quits after displaying the additional help information.}

\item{...}{further parameters specific to ClustalOmega; An overview of parameters
that are available in this interface is shown when calling \code{msaClustalOmega}
with \code{help=TRUE}. For more details, see also the documentation of ClustalOmega.

Please view details on \code{\link[msa]{msa}}
\code{\link[msa]{msaClustalOmega}} function which provides details
about the parameters that adjust the alignment.}
}
\value{
The alignment generated by ClustalOmega in the form of a seqinr
alignment.
}
\description{
Return a seqinr aligment containing sequences that are
aligned by the ClustalOmega alignment algorithm. The user may search the
referenceDB for a set of BaliBASE sequences by entering the alignment ID
as input, or they may input a .mfa file containing the sequences in
fasta format.
}
\examples{
\dontrun{
writeAln("BB11002")
aln <- fetchClustalOmega("inst/extdata/Output/BB11002.mfa",
readType = "AA", gapExtension = 2)
}

}
